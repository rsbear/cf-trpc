generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

// enum Role {
//   BASIC
// 	MAKER
//   ADMIN
// }
//
// enum Stage {
//   INTERESTCHECK
//   GROUPBUY
// 	PROTOTYPE
// 	SAMPLES
// }

model Auth {
  id       String  @id @default(cuid())
  email    String  @unique
	token    String
	username String 

	magicWord     String @unique
	accessToken   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id       String  @id @default(cuid())
  email    String  @unique
  username String  @unique
  name     String? @db.VarChar(255)

	// role     Role @default(BASIC)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

	// chatPosts          ChatPost[]
	// createdKeyboards   Keyboard[]
	// createdKeysets     Keyset[]
}

// model Keyboard {
//   id        String  @id @default(cuid())
//   alias     String? @unique @db.VarChar(255)
//   brand     String? @db.VarChar(255)
//   connector String? @db.VarChar(255)
//   firmware  String? @db.VarChar(255)
//   name      String? @db.VarChar(255)
//   size      String? @db.VarChar(255)
//
// 	stage     Stage @default(INTERESTCHECK)
//
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//
// 	discussion Discussion? 
//
// 	creator   User? @relation(fields: [creatorId], references: [id])
// 	creatorId String?
// }
//
// model Keyset {
//   id        String  @id @default(cuid())
//   alias     String? @unique @db.VarChar(255)
//   material  String? @db.VarChar(255)
//   name      String? @db.VarChar(255)
//   profile   String? @db.VarChar(255)
//   type      String? @db.VarChar(255)
//
// 	stage     Stage @default(INTERESTCHECK)
//
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//
// 	discussion Discussion? 
//
// 	creator   User? @relation(fields: [creatorId], references: [id])
// 	creatorId String?
// }
//
// model Discussion {
//   id      String  @id @default(cuid())
// 	isOpen  Boolean @default(true)
//
// 	chatPosts     ChatPost[]
//
// 	keyboard      Keyboard? @relation(fields: [keyboardId], references: [id])
// 	keyboardId    String?
//
// 	keyset        Keyset? @relation(fields: [keysetId], references: [id])
// 	keysetId      String?
// }
//
// model ChatPost {
//   id    String  @id @default(cuid())
// 	body  String?
//
// 	discussion  Discussion? @relation(fields: [discussionId], references: [id])
// 	discussionId  String?
//
// 	author      User? @relation(fields: [authorId], references: [id])
// 	authorId    String?
//
// }
